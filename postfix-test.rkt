#lang racket

(require rackunit
         "postfix.rkt")

(check-equal? (run-postfix '(postfix 0 1 2 3))
              3)
(check-equal? (run-postfix '(postfix 0 1 2 3 pop))
              2)
(check-equal? (run-postfix '(postfix 0 1 2 swap 3 pop))
              1)
(check-exn exn:fail? (lambda ()
                       (run-postfix '(postfix 0 1 swap))))
(check-exn exn:fail? (lambda ()
                       (run-postfix '(postfix 0 1 pop pop))))

(check-equal? (run-postfix '(postfix 2)
                           3 4)
              3)
(check-equal? (run-postfix '(postfix 2 swap)
                           3 4)
              4)
(check-equal? (run-postfix '(postfix 3 pop swap)
                           3 4 5)
              5)

(check-exn exn:fail? (lambda ()
                       (run-postfix '(postfix 2 swap)
                                    3)))
(check-exn exn:fail? (lambda ()
                       (run-postfix '(postfix 1 pop)
                                    4 5)))

(check-equal? (run-postfix '(postfix 1 4 sub)
                           3)
              -1)
(check-equal? (run-postfix '(postfix 1 4 add 5 mul 6 sub 7 div)
                           3)
              4)
(check-equal? (run-postfix '(postfix 5 add mul sub swap div)
                           7 6 5 4 3)
              -20)
(check-equal? (run-postfix '(postfix 3 4000 swap pop add)
                           300 20 1)
              4020)
(check-equal? (run-postfix '(postfix 2 add 2 div)
                           3 7)
              5)
(check-equal? (run-postfix '(postfix 1 3 div)
                           17)
              5)
(check-equal? (run-postfix '(postfix 1 3 rem)
                           17)
              2)
(check-equal? (run-postfix '(postfix 1 4 lt)
                           3)
              1)
(check-equal? (run-postfix '(postfix 1 4 lt)
                           5)
              0)
(check-equal? (run-postfix '(postfix 1 4 lt 10 add)
                           3)
              11)
(check-exn exn:fail? (lambda ()
                       (run-postfix '(postfix 1 4 mul add)
                                    3)))
(check-exn exn:fail? (lambda ()
                       (run-postfix '(postfix 2 4 sub div)
                                    4 5)))

(check-equal? (run-postfix '(postfix 2 1 nget)
                           4 5)
              4)
(check-equal? (run-postfix '(postfix 2 2 nget)
                           4 5)
              5)

(check-exn exn:fail? (lambda ()
                       (run-postfix '(postfix 2 3 nget)
                                    4 5)))
(check-exn exn:fail? (lambda ()
                       (run-postfix '(postfix 2 0 nget)
                                    4 5)))
(check-exn exn:fail? (lambda ()
                       (run-postfix '(postfix 1 (2 mul) 1 nget)
                                    3)))

(check-equal? (run-postfix '(postfix 1 1 nget mul)
                           5)
              25)
(check-equal? (run-postfix '(postfix 4 4 nget 5 nget mul mul swap 4 nget mul add add)
                           3 4 5 2)
              25)

(check-equal? (run-postfix '(postfix 1 (2 mul) exec)
                           7)
              14)
(check-equal? (run-postfix '(postfix 0 (0 swap sub) 7 swap exec))
              -7)
(check-exn exn:fail? (lambda ()
                       (run-postfix '(postfix 0 (2 mul)))))
(check-exn exn:fail? (lambda ()
                       (run-postfix '(postfix 0 3 (2 mul) gt))))
(check-exn exn:fail? (lambda ()
                       (run-postfix '(postfix 0 3 exec))))
(check-equal? (run-postfix '(postfix 0 (7 swap exec) (0 swap sub) swap exec))
              -7)
(check-equal? (run-postfix '(postfix 2 (mul sub) (1 nget mul) 4 nget swap exec swap exec)
                           -10 2)
              42)

(check-equal? (run-postfix '(postfix 1 2 3 sel)
                           1)
              2)
(check-equal? (run-postfix '(postfix 1 2 3 sel)
                           0)
              3)
(check-equal? (run-postfix '(postfix 1 2 3 sel)
                           17)
              2)
(check-exn exn:fail? (lambda ()
                       (run-postfix '(postfix 0 (2 mul) 3 4 sel))))
(check-equal? (run-postfix '(postfix 4 lt (add) (mul) sel exec)
                           3 4 5 6)
              30)
(check-equal? (run-postfix '(postfix 4 lt (add) (mul) sel exec)
                           4 3 5 6)
              11)
(check-equal? (run-postfix '(postfix 1 1 nget 0 lt (0 swap sub) () sel exec)
                           -7)
              7)
(check-equal? (run-postfix '(postfix 1 1 nget 0 lt (0 swap sub) () sel exec)
                           6)
              6)
